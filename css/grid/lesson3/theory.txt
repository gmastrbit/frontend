Теорія

display: grid; - створення grid контейнера
grid-template-columns: 200px 200px 200px; - шаблон відображення стовпчиків
grid-template-columns: repeat(3, 1fr); - повторення repeat(3, 1fr) = 1fr, 1fr, 1fr
grid-auto-rows: 200px; - розмір треків невного гріда
grid-auto-rows: minmax(100px, auto); - minmax(100px, auto) для визначення мінімального і максимального розміру

grid-cell - грід комірка
grid-area - грід область

grid-column-gap: 10px; - зазори між стовпцями
grid-row-gap: 1em; - зазори між рядами

grid-column-start: 1; - початок відображення певної комірки по стовпцях
grid-column-end: 4; - кінець відображення певної комірки по стовпцях

grid-row-start: 1; - початок відображення певної комірки по рядах
grid-row-end: 3; - початок відображення певної комірки по рядах

Теорія 2

display

	Определяет элемент как контейнер и устанавливает новый контекст форматирования сетки для его содержимого.

	Значения:
		grid - формирует сетку как блок;
		inline-grid - формирует сетку как инлайновый блок;
		subgrid - если ваш контейнер это ещё и элемент (вложенная сетка), то вы можете использовать это свойство для обозначения того, чтобы размеры строк/колонок были взяты из родительского элемента, а не определяли собственный;

	.container {
	  display: grid | inline-grid | subgrid;
	}

grid-template-columns grid-tempate-rows
	Определяет колонки и строки сетки с помощью списка значений разделённого пробелами. Значения представляют из себя размер трека, а пробелы между ними представляют линии сетки.

	Значения:
		<track-size> - может быть фиксированным размером, процентами или частью свободного пространства в сетке (определяется с помощью единицы fr (fraction));
		<line-name> - произвольное имя на ваш выбор;
	
	.container{
	  grid-template-columns: 40px 50px auto 50px 40px;
	  grid-template-rows: 25% 100px auto;
	}

grid-template-areas
	Определяет шаблон сетки ссылаясь на имена областей, которые заданы с помощью свойства grid-area. Повторение названия области приводит к тому, что содержимое охватывает эти ячейки. Точка означает пустую ячейку. Сам синтаксис предоставляет визуализацию структуры сетки.

	Значения:
		<grid-area-name> - имя области заданное с помощью grid-area;
		. - точка обозначающая пустую ячейку;
		none - области не определены;
	
	.item-a {
	  grid-area: header;
	}
	.item-b {
	  grid-area: main;
	}
	.item-c {
	  grid-area: sidebar;
	}
	.item-d {
	  grid-area: footer;
	}

	.container {
	  grid-template-columns: 50px 50px 50px 50px;
	  grid-template-rows: auto;
	  grid-template-areas: 
	    "header header header header"
	    "main main . sidebar"
	    "footer footer footer footer";
	}

grid-template
	Сокращение для grid-template-rows, grid-template-columns, и grid-template-areas.

	Значения:
		none - устанавливает все три свойства в их начальное значение;
		subgrid - устанавливает grid-template-rows и grid-template-columns в subgrid, и grid-template-areas в его начальное значение;
		<grid-template-rows> / <grid-template-columns> - устанавливает grid-template-columns и grid-template-rows в определённое значение, соответственно, и устанавливает grid-template-areas в none;	

grid-column-gap grid-row-gap
	Определяет размер ширины линий. Вы можете думать об этом, как о настройке ширины отступов между столбцами и строками.

	Значения:
		<line-size> - значение размера;

	.container {
	  grid-column-gap: 10px;
	  grid-row-gap: 15px;
	}

grid-gap
	Сокращение для grid-row-gap и grid-column-gap.

	Значение:
		<grid-row-gap> <grid-column-gap> - значения размеров;							

	.container{
	  grid-template-columns: 100px 50px 100px;
	  grid-template-rows: 80px auto 80px; 
	  grid-gap: 10px 15px;
	}

justify-items
	Выравнивает содержимое вдоль оси строки (в отличии от align-items который выравнивает элементы вдоль оси столбца). Это значение применяется ко всем элементам сетки внутри контейнера.

	Значения:
		start - выравнивает содержимое по левой стороне области;
		end - выравнивает содержимое по правой стороне области;
		center - выравнивает содержимое по центру области;
		stretch - заполняет всю ширину области (по умолчанию);	

	.container {
	  justify-items: start;
	}				

align-items
	Выравнивает содержимое вдоль оси столбца (в отличии от justify-items который выравнивает элементы вдоль оси строки). Это значение применяется ко всем элементам сетки внутри контейнера.

	Значения:
		start - выравнивание элементов по верхней части области;
		end - выравнивание элементов по нижней части области;
		center - выравнивание элементов по центру области;
		stretch - заполняет всю высоту области (по умолчанию);		

	.container {
	  align-items: start;
	}

justify-content
	Иногда общий размер сетки может быть меньше размера контейнера. Такое может случится если у всех элементов сетки заданы фиксированные единицы измерения, например px. В таком случае можно установить выравнивание сетки внутри контейнера. Это свойство выравнивает сетку вдоль оси строки (в отличии от свойства align-content, которое выравнивает сетку вдоль оси столбца).

	Значения:
		start - выравнивает сетку по левой стороне контейнера;
		end - выравнивает сетку по правой стороне контейнера;
		center - выравнивает сетку по центру контейнера;
		stretch - масштабирует элементы чтобы сетка могла заполнить всю ширину контейнера;
		space-around - одинаковое пространство между элементами, и полуразмерные отступы по краям;
		space-between - одинаковое пространство между элементами, без отступов по краям;
		space-evenly - одинаковое пространство между элементами, и полноразмерные отступы по краям;

	.container {
	  justify-content: start;
	}

align-content
	Иногда общий размер сетки может быть меньше размера контейнера. Такое может случится если у всех элементов сетки зада фиксированные единицы измерения, например px. В таком случае можно установить выравнивание сетки внутри контейнера. Это свойство выравнивает сетку вдоль оси колонки (в отличии от свойства justify-content, которое выравнивает сетку вдоль оси строки).

	Значения:
		start - выравнивает сетку по верхней части контейнера;
		end - выравнивает сетку по нижней части контейнера;
		center - выравнивает сетку по центру контейнера;
		stretch - масштабирует элементы чтобы сетка могла заполнить всю высоту контейнера;
		space-around - одинаковое пространство между элементами, и полуразмерные отступы по краям;
		space-between - одинаковое пространство между элементами, без отступов по краям;
		space-evenly - одинаковое пространство между элементами, и полноразмерные отступы по краям;	

	.container {
	  align-content: start; 
	}

grid-auto-columns grid-auto-rows
	Определяет размер любых автоматически созданных треков (иначе говоря, неявных треков). Неявные треки создаются при явном позиционировании столбцов и строк (через grid-template-rows/grid-template-columns), которые находятся за пределами заданной сетки.

	Значения:
		<track-size> - может быть фиксированным размером, процентами, или частью свободного пространства в сетке (с использованием единицы fr);

	.container {
	  grid-auto-columns: 60px;
	}

grid-auto-flow
	Если у вас есть элементы, которые вы явно не позиционируете в сетке, запускается алгоритм авто-размещения, чтобы их автоматически разместить. Это свойство контролирует то как алгоритм авто-размещения работает.

	Значения:
		row - говорит алгоритму авто-размещения заполнять каждую строку поочерёдно, добавляя новые строки при необходимости;
		column - говорит алгоритму авто-размещения заполнять каждую колонку поочерёдно, добавляя новые колонки при необходимости;
		dense - говорит алгоритму авто-размещения попытаться заполнить дыры в сетке, если более мелкие элементы появляются позже;

	.container {
	  display: grid;
	  grid-template-columns: 60px 60px 60px 60px 60px;
	  grid-template-rows: 30px 30px;
	  grid-auto-flow: row;
	}

grid
	Сокращение для настройки всех следующих свойств: grid-template-rows, grid-template-columns, grid-template-areas, grid-auto-rows, grid-auto-columns, и grid-auto-flow. Он также настраивает grid-column-gap и grid-row-gap на их начальные значения, даже если они не могут быть явно заданы этим свойством.

	Значения:
		none - настраивает все свойства на их начальные значения;
		<grid-template-rows> / <grid-template-columns> - настраивает grid-template-rows и grid-template-columns на соответствующие указанные значения, а все остальные свойства сбрасывает к их начальным значениям;
		<grid-auto-flow> [<grid-auto-rows> [ / <grid-auto-columns>] ] - принимает те же самые значения что и grid-auto-flow, grid-auto-rows и grid-auto-columns, соответственно. Если grid-auto-columns опущено, устанавливается значение соответствующие для grid-auto-rows. Если опущены оба, то они устанавливаются в начальные значения;
	
	.container {
	  grid: 200px auto / 1fr auto 1fr;
	}

	
grid-column-start grid-column-end grid-row-start grid-row-end
	Определяют местоположение в сетке ссылаясь на конкретные линии. grid-column-start/grid-row-start - это линия с которой начинается элемент, а grid-column-end/grid-row-end - это линия на которой элемент заканчивается.

	Значения:
		<line> - может быть числом ссылающимся на пронумерованную линию, или названием ссылающимся на именованую линию;
		span <number> - элемент, который будет охватывать предоставленное количество треков;
		span <name> - элемент будет будет охватывать пока не достигнет линии с указанным названием;
		auto - указывает автоматическое размещения, автоматическое охват, или охват по умолчанию;

	.item-a {
	  grid-column-start: 2;
	  grid-column-end: five;
	  grid-row-start: row1-start
	  grid-row-end: 3
	}

grid-column grid-row
	Сокращение для grid-column-start + grid-column-end, и grid-row-start + grid-row-end, соответственно.

	Значения:
		<start-line> / <end-line> - каждый из них принимает тоже самое, что и в длинной версии, включая охват;
	
	.item-c {
	  grid-column: 3 / span 2;
	  grid-row: third-line / 4;
	}

grid-area
	Даёт название элементу чтобы можно было ссылаться на него с помощью шаблона созданного через grid-template-areas свойство. В качестве альтернативы, это свойство может быть использовано в качестве сокращения для grid-row-start + grid-column-start + grid-row-end + grid-column-end.

	Значения:
		<name> - название, которое вы выберите;
		<row-start> / <column-start> / <row-end> / <column-end> - может быть нумерацией или названиями линий;

	.item-d {
	  grid-area: header
	}

justify-self
	Выравнивает содержимое элемента вдоль оси строки (в отличии от align-self, который выравнивает вдоль оси столбца). Это значение применяется к содержимому внутри отдельного элемента.

	Значения:
		start - выравнивает содержимое по левой части области;
		end - выравнивает содержимое по правой части области;
		center -выравнивает содержимое по центру области;
		stretch - заполняет всю ширину области (по умолчанию);

	.item-a {
	  justify-self: start;
	}

align-self
	Выравнивает содержимое элемента вдоль оси столбца (в отличии от justify-self, который выравнивает вдоль оси строки). Это значение применяется к содержимому внутри отдельного элемента.

	Значения:
		start - выравнивает содержимое по верхней части области;
		end - выравнивает содержимое по нижней части области;
		center -выравнивает содержимое по центру области;
		stretch - заполняет всю высоту области (по умолчанию);

	.item-a {
	  align-self: start;
	}